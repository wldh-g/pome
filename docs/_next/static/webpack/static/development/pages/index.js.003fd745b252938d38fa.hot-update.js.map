{"version":3,"file":"static/webpack/static/development/pages/index.js.003fd745b252938d38fa.hot-update.js","sources":["webpack:///./components/MenuMain/MenuList/ListByMeal.tsx","webpack:///./components/MenuMain/MenuList/MealByPlace.tsx","webpack:///./components/MenuMain/MenuList/index.tsx"],"sourcesContent":["import React from 'react';\nimport MealByPlace from './MealByPlace';\nimport useI18n from '../../I18n';\n\nimport $ from './style.scss';\nimport D from './en.d.yml';\n\ninterface Props {\n  type: 'breakfast' | 'lunch' | 'dinner'\n}\n\nconst ListByMeal: React.SFC<Props> = (props: Props) => {\n  const { t } = useI18n(D);\n  const { type } = props;\n\n  return (\n    <div className={$.menuBLD}>\n      <div>\n        <h4>{t('학생 식당')}</h4>\n        <MealByPlace type={type} />\n      </div>\n      <div>\n        <h4>{t('RIST 식당')}</h4>\n        <MealByPlace type={type} />\n      </div>\n    </div>\n  );\n};\n\nexport default ListByMeal;\n","import React from 'react';\nimport { Shimmer } from 'office-ui-fabric-react';\n\nimport $ from './style.scss';\n\ninterface Props {\n  type: 'breakfast' | 'lunch' | 'dinner'\n}\n\nconst MealByPlace: React.SFC<Props> = (props: Props) => {\n  const { menu, type } = props;\n\n  let menuLists = [];\n  if (menu.processed) {\n    if (menu[type].length > 0 && menu[type][0].indexOf('==') !== 0) {\n      menuLists = [\n        ...menuLists,\n        <div data-list key={`${type}-${Math.random()}`}>\n          {\n            menu[type].map((m) => <p key={`${type}-item-${Math.random()}`}>{m}</p>)\n          }\n        </div>,\n      ];\n    } else {\n      let cacheList = [];\n      let cacheLabel = '';\n      for (let idx = 0; idx < menu[type].length; idx += 1) {\n        const item = menu[type][idx];\n        if (item.indexOf('== ') === 0) {\n          if (cacheList.length > 0) {\n            menuLists = [\n              ...menuLists,\n              <div data-list key={`${type}-${Math.random()}`}>\n                <h6>{cacheLabel}</h6>\n                {\n                  cacheList.map((m) => <p key={`${type}-item-${Math.random()}`}>{m}</p>)\n                }\n              </div>,\n            ];\n            cacheList = [];\n          }\n          cacheLabel = item.substring(3);\n        } else {\n          cacheList.push(item);\n        }\n      }\n      if (cacheList.length > 0) {\n        menuLists = [\n          ...menuLists,\n          <div data-list key={`${type}-${Math.random()}`}>\n            <h6>{cacheLabel}</h6>\n            {\n              cacheList.map((m) => <p key={`${type}-item-${Math.random()}`}>{m}</p>)\n            }\n          </div>,\n        ];\n      }\n    }\n  }\n\n  return (\n    <div className={$.menuList}>\n      {\n        menu.processed ? menuLists : (\n          <>\n            <Shimmer />\n            <Shimmer />\n            <Shimmer />\n            <Shimmer width=\"75%\" />\n            <Shimmer width=\"50%\" />\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default MealByPlace;\n","import React, { useEffect } from 'react';\nimport {\n  Pivot, PivotItem,\n} from 'office-ui-fabric-react';\nimport ListByMeal from './ListByMeal';\nimport useAPI from '../../API';\nimport useI18n from '../../I18n';\n\nimport $ from './style.scss';\nimport D from './en.d.yml';\n\n/* eslint-disable react-hooks/exhaustive-deps */\nconst MenuList: React.SFC = () => {\n  // States\n  const { setAPILocale, fetchMenu } = useAPI();\n  const { t, getLocale } = useI18n(D);\n\n  // Fetch Menu Data\n  useEffect(() => {\n    setAPILocale(getLocale());\n    fetchMenu();\n  }, []);\n\n  // Set default menu pivot item by time\n  const hour = (new Date()).getHours();\n  let showWhat = 'breakfast';\n  if (hour >= 14) {\n    showWhat = 'dinner';\n  } else if (hour >= 10) {\n    showWhat = 'lunch';\n  }\n\n  return (\n    <Pivot className={$.menuContainer} defaultSelectedKey={showWhat}>\n      <PivotItem headerText={t('아침')} itemKey=\"breakfast\">\n        <ListByMeal type=\"breakfast\" />\n      </PivotItem>\n      <PivotItem headerText={t('점심')} itemKey=\"lunch\">\n        <ListByMeal type=\"lunch\" />\n      </PivotItem>\n      <PivotItem headerText={t('저녁')} itemKey=\"dinner\">\n        <ListByMeal type=\"dinner\" />\n      </PivotItem>\n    </Pivot>\n  );\n};\n\nexport default MenuList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AAEA;AACA;AAKA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}