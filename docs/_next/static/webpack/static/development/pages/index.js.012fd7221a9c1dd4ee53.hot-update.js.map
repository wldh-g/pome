{"version":3,"file":"static/webpack/static/development/pages/index.js.012fd7221a9c1dd4ee53.hot-update.js","sources":["webpack:///./components/MenuMain/MenuList/MealByPlace.tsx"],"sourcesContent":["import React from 'react';\nimport { Shimmer } from 'office-ui-fabric-react';\nimport { MealType, MealPlaces, useAPI } from '../../API';\n\nimport $ from './style.scss';\n\ninterface Props {\n  type: MealType\n  place: MealPlaces\n};\n\nconst MealByPlace: React.SFC<Props> = (props: Props) => {\n  const { getMenu, isMenuLoaded } = useAPI();\n  const { place, type } = props;\n\n  let menuLists = [];\n  if (menu.processed) {\n    if (menu[type].length > 0 && menu[type][0].indexOf('==') !== 0) {\n      menuLists = [\n        ...menuLists,\n        <div data-list key={`${type}-${Math.random()}`}>\n          {\n            menu[type].map((m) => <p key={`${type}-item-${Math.random()}`}>{m}</p>)\n          }\n        </div>,\n      ];\n    } else {\n      let cacheList = [];\n      let cacheLabel = '';\n      for (let idx = 0; idx < menu[type].length; idx += 1) {\n        const item = menu[type][idx];\n        if (item.indexOf('== ') === 0) {\n          if (cacheList.length > 0) {\n            menuLists = [\n              ...menuLists,\n              <div data-list key={`${type}-${Math.random()}`}>\n                <h6>{cacheLabel}</h6>\n                {\n                  cacheList.map((m) => <p key={`${type}-item-${Math.random()}`}>{m}</p>)\n                }\n              </div>,\n            ];\n            cacheList = [];\n          }\n          cacheLabel = item.substring(3);\n        } else {\n          cacheList.push(item);\n        }\n      }\n      if (cacheList.length > 0) {\n        menuLists = [\n          ...menuLists,\n          <div data-list key={`${type}-${Math.random()}`}>\n            <h6>{cacheLabel}</h6>\n            {\n              cacheList.map((m) => <p key={`${type}-item-${Math.random()}`}>{m}</p>)\n            }\n          </div>,\n        ];\n      }\n    }\n  }\n\n  return (\n    <div className={$.menuList}>\n      {\n        menu.processed ? menuLists : (\n          <>\n            <Shimmer />\n            <Shimmer />\n            <Shimmer />\n            <Shimmer width=\"75%\" />\n            <Shimmer width=\"50%\" />\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default MealByPlace;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}