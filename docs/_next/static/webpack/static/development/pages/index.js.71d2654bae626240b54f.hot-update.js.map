{"version":3,"file":"static/webpack/static/development/pages/index.js.71d2654bae626240b54f.hot-update.js","sources":["webpack:///./components/Wrapper/index.tsx"],"sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport { initializeIcons } from '@uifabric/icons';\n\nimport './style.scss';\n\n// Fabric UI\ninitializeIcons(undefined, { disableWarnings: true });\nimport('office-ui-fabric-react/lib/Styling').then((sty) => {\n  sty.loadTheme({\n    palette: {\n      themePrimary: 'var(--monet)',\n      themeDarker: 'var(--monet)',\n      themeDark: 'var(--monet)',\n      themeDarkAlt: 'var(--monet)',\n      themeLight: 'var(--monet)',\n      themeLighter: 'var(--monet)',\n      themeLighterAlt: 'var(--monet)',\n    },\n  });\n}).catch(() => {});\n\n// React Wrapper\ninterface Props {\n  title?: string\n  description?: string\n  main?: boolean\n  image?: string\n  className?: string\n  children: React.ReactElement | React.ReactElement[]\n};\n\nconst Wrapper: React.SFC<Props> = (props: Props) => {\n  const {\n    children, title, main, description, image, className,\n  } = props;\n\n  // Determine meta information\n  const realTitle = main ? '오늘의 메뉴' : `${title} - 오늘의 메뉴`;\n  const metaDescription = description || '당신 꿀벌은 밥을 잘 먹습니까?';\n  const metaImage = image || '/images/buzz_fly.gif';\n\n  // Render\n  return (\n    <div className={className}>\n      <Head>\n\n        {/* Meta Tags */}\n        <meta name=\"theme-color\" content=\"#ffffff\" />\n        <meta name=\"robots\" content=\"noimageindex\" />\n        <meta name=\"description\" content={metaDescription} />\n        <meta name=\"viewport\" content=\"width=320, user-scalable=no\" />\n        <meta property=\"og:title\" content={realTitle} />\n        <meta property=\"og:image\" content={metaImage} />\n        <meta property=\"og:description\" content={metaDescription} />\n        <title>{realTitle}</title>\n\n        {/* Styles */}\n        <link href=\"favicon.ico\" rel=\"shortcut icon\" />\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:300,400,500,700&display=swap&subset=korean\"\n          rel=\"stylesheet\"\n        />\n\n      </Head>\n\n      {/* Real Body */}\n      {children}\n    </div>\n  );\n};\n\nexport default Wrapper;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAWA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}