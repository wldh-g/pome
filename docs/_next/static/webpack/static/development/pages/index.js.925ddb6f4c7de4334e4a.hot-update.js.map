{"version":3,"file":"static/webpack/static/development/pages/index.js.925ddb6f4c7de4334e4a.hot-update.js","sources":["webpack:///./components/Theme.tsx"],"sourcesContent":["import React, {\n  createContext, useReducer, useContext, Dispatch,\n} from 'react';\nimport { createTheme, Customizations, IRawStyle } from 'office-ui-fabric-react';\n\nconst notoFont: IRawStyle = {\n  fontFamily: '\"Noto Sans CJK KR\", \"Noto Sans KR\", sans-serif',\n  fontWeight: 'normal',\n};\n\nconst monetLight = createTheme({\n  defaultFontStyle: notoFont,\n  palette: {\n    themePrimary: '#ffc206',\n    themeLighterAlt: '#fffdf5',\n    themeLighter: '#fff5d7',\n    themeLight: '#ffecb4',\n    themeTertiary: '#ffda69',\n    themeSecondary: '#ffc823',\n    themeDarkAlt: '#e6ad05',\n    themeDark: '#c29204',\n    themeDarker: '#8f6c03',\n    neutralLighterAlt: '#f8f8f8',\n    neutralLighter: '#f4f4f4',\n    neutralLight: '#eaeaea',\n    neutralQuaternaryAlt: '#dadada',\n    neutralQuaternary: '#d0d0d0',\n    neutralTertiaryAlt: '#c8c8c8',\n    neutralTertiary: '#b2b2b2',\n    neutralSecondary: '#999999',\n    neutralPrimaryAlt: '#808080',\n    neutralPrimary: '#1b1b1b',\n    neutralDark: '#4e4e4e',\n    black: '#a5a5a5',\n    white: '#fefefe',\n  },\n});\n\nconst monetDark = createTheme({\n  defaultFontStyle: notoFont,\n  palette: {\n    themePrimary: '#ffc206',\n    themeLighterAlt: '#fffdf5',\n    themeLighter: '#fff5d7',\n    themeLight: '#ffecb4',\n    themeTertiary: '#ffda69',\n    themeSecondary: '#ffc823',\n    themeDarkAlt: '#e6ad05',\n    themeDark: '#c29204',\n    themeDarker: '#8f6c03',\n    neutralLighterAlt: '#262626',\n    neutralLighter: '#2f2f2f',\n    neutralLight: '#3d3d3d',\n    neutralQuaternaryAlt: '#464646',\n    neutralQuaternary: '#4d4d4d',\n    neutralTertiaryAlt: '#6b6b6b',\n    neutralTertiary: '#ababab',\n    neutralSecondary: '#8f8f8f',\n    neutralPrimaryAlt: '#737373',\n    neutralPrimary: '#fefefe',\n    neutralDark: '#ebebeb',\n    black: '#ababab',\n    white: '#1b1b1b',\n  },\n});\n\ntype ThemeName = 'dark' | 'light';\ninterface ThemeStruct { theme: ThemeName, locked: boolean };\n\nconst initialThemeContext: ThemeStruct = { theme: 'light', locked: false };\nconst ThemeContext = createContext<ThemeStruct>(initialThemeContext);\n\ntype ThemeAction =\n  { type: 'SET_THEME'; theme: ThemeName; }\n  | { type: 'SET_LOCK_STATE'; locked: boolean; };\nconst themeReducer = (state: ThemeStruct, action: ThemeAction): ThemeStruct => {\n  switch (action.type) {\n    case 'SET_THEME':\n      return {\n        ...state,\n        theme: action.theme,\n      };\n    case 'SET_LOCK_STATE':\n      return {\n        ...state,\n        locked: action.locked,\n      };\n    default:\n      return state;\n  }\n};\n\ntype ThemeDispatch = Dispatch<ThemeAction>;\nconst ThemeDispatchContext = createContext<ThemeDispatch | undefined>(undefined);\n\ninterface Props { children: React.ReactElement | React.ReactElement[] }\nexport const ThemeEnabled: React.SFC<Props> = ({ children }: Props) => {\n  const [state, dispatch] = useReducer(themeReducer, initialThemeContext);\n  return (\n    <ThemeDispatchContext.Provider value={dispatch}>\n      <ThemeContext.Provider value={state}>\n        {children}\n      </ThemeContext.Provider>\n    </ThemeDispatchContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const state = useContext(ThemeContext);\n  const dispatch = useContext(ThemeDispatchContext);\n\n  // Theme Setter\n  const setTheme = (theme: ThemeName): void => {\n    if (!state.locked) {\n      if (theme === 'dark') {\n        if (document) {\n          document.documentElement.dataset.theme = 'dark';\n        }\n        Customizations.applySettings({ theme: monetDark });\n      } else {\n        if (document) {\n          document.documentElement.dataset.theme = 'light';\n        }\n        Customizations.applySettings({ theme: monetLight });\n      }\n      dispatch({\n        type: 'SET_THEME',\n        theme,\n      });\n    }\n  };\n\n  // Theme Getter\n  const getTheme = (): ThemeName => state.theme;\n\n  // Lock Getter\n  const isThemeLocked = (): boolean => state.locked;\n\n  // Locker\n  const lockTheme = (): void => {\n    dispatch({\n      type: 'SET_LOCK_STATE',\n      locked: true,\n    });\n  };\n\n  // Unlocker\n  const unlockTheme = (): void => {\n    dispatch({\n      type: 'SET_LOCK_STATE',\n      locked: false,\n    });\n  };\n\n  return {\n    getTheme, setTheme, lockTheme, unlockTheme, isThemeLocked,\n  };\n};\n\nexport default useTheme;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAFA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAFA;AA6BA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAZA;AAcA;AACA;AAEA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAEA;;;;A","sourceRoot":""}