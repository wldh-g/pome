{"version":3,"file":"static/webpack/static/development/pages/index.js.ac694ca9495d52be11e4.hot-update.js","sources":["webpack:///./components/API.tsx"],"sourcesContent":["import React, {\n  createContext, useReducer, useContext, Dispatch,\n} from 'react';\nimport { I18nLocale } from './I18n';\n\nexport type MealType = 'breakfast' | 'lunch' | 'dinner';\ninterface MealMultiMenu {\n  [mealName: string]: string[]\n};\ntype MealMenu = string[] | MealMultiMenu;\ntype MealByPlace = { [key in MealType]: MealMenu };\ntype MealPlaces = 'jigok' | 'rist';\ntype APIDataStruct = {\n  loaded: boolean\n  locale: I18nLocale\n  meals?: { [key in MealPlaces]: MealByPlace }\n};\n\nconst initialAPIContext: APIDataStruct = { loaded: false, locale: 'ko' };\nconst APIContext = createContext<APIDataStruct>(initialAPIContext);\n\ntype APIAction =\n  | { type: 'FETCH'; }\n  | { type: 'SET_LOCALE'; locale: I18nLocale };\nconst apiReducer = (state: APIDataStruct, action: APIAction): APIDataStruct => {\n  switch (action.type) {\n    case 'SET_LOCALE': {\n      return {\n        ...state,\n        loaded: action.locale === state.locale ? state.loaded : false,\n        locale: action.locale,\n      };\n    }\n    case 'FETCH': {\n      return state;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\ntype APIDispatch = Dispatch<APIAction>;\nconst APIDispatchContext = createContext<APIDispatch | undefined>(undefined);\n\ninterface Props { children: React.ReactElement | React.ReactElement[] }\nexport const APIEnabled: React.SFC<Props> = ({ children }: Props) => {\n  const [state, dispatch] = useReducer(apiReducer, initialAPIContext);\n  return (\n    <APIDispatchContext.Provider value={dispatch}>\n      <APIContext.Provider value={state}>\n        {children}\n      </APIContext.Provider>\n    </APIDispatchContext.Provider>\n  );\n};\n\nexport const useAPI = () => {\n  const state = useContext(APIContext);\n  const dispatch = useContext(APIDispatchContext);\n\n  // Locale Setter\n  const setLocale = (locale: I18nLocale): void => {\n    dispatch({\n      type: 'SET_LOCALE',\n      locale,\n    });\n  };\n\n  // Locale Getter\n  const getLocale = (): I18nLocale => state.locale;\n\n  // Menu Fetcher\n  const fetchMenu = () => {\n    if (!state.loaded) {\n      dispatch({ type: 'FETCH' });\n    }\n  };\n\n  // Menu Getter\n  const getMenu = (place: MealPlaces, type: MealType): (MealMenu | null) => {\n    let menu = null;\n    if (state.loaded && state.meals) {\n      menu = state.meals[place][type];\n    }\n    return menu;\n  };\n\n  return { setLocale, getLocale, fetchMenu, getMenu };\n};\n\nexport default useAPI;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAQA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAbA;AAeA;AACA;AAEA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;A","sourceRoot":""}